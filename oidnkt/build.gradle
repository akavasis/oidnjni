buildscript {
    apply from: rootProject.file('versions.gradle')
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
}

group 'net.time4tea'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    project(":oidnjni")
    implementation kotlin
    testImplementation testing
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/* generate headers to look at, not used for code gen */
task javah(type: Exec) {
    def classpath = sourceSets.main.output.classesDirs.join(File.pathSeparator)
    println(classpath)
    commandLine "javah", "-classpath", classpath, "-d", "$buildDir/generated/jni", "net.time4tea.oidn.Oidn", "net.time4tea.oidn.OidnDevice", "net.time4tea.oidn.OidnFilter"
    dependsOn classes
}


ext.libraries = file("$buildDir/generated/libraries")

task copyLibraries(type: Copy) {
    dependsOn ":oidnjni:make"
    def oidnjni = project(":oidnjni")
    def jni_lib = oidnjni.ext.jni_lib
    from oidnjni.ext.oidn_libs, "${oidnjni.buildDir}/${jni_lib}"
    include "*.so"
    include "libtbb.so.*"
    include "libtbbmalloc.so.*"
    into libraries
}

test {
    outputs.upToDateWhen {false}
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", libraries
        }
    }
}

compileJava.dependsOn  copyLibraries
clean.dependsOn  ':oidnjni:makeClean'